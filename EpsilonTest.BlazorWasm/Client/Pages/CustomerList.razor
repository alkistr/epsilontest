@page "/customerlist"
@using EpsilonTest.BlazorWasm.Shared
@inject ICustomerManager customerManager
@inject NavigationManager navManager

<PageTitle>Customers</PageTitle>

<h1>Customers</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (Customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>CompanyName</th>
                <th>ContactName</th>
                <th>Address</th>
                <th>City</th>
                <th>PostalCode</th>
                <th>Country</th>
                <th>Phone</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Customers)
            {
                <tr>
                    <td>@customer.CompanyName</td>
                    <td>@customer.ContactName</td>
                    <td>@customer.Address</td>
                    <td>@customer.City</td>
                    <td>@customer.PostalCode</td>
                    <td>@customer.Country</td>
                    <td>@customer.Phone</td>
                    <td><button type="button" class="btn btn-light" @onclick="@(() => Edit(customer.Id))">Edit</button></td>
                    <td><button type="button" class="btn btn-danger" @onclick="@(() => Delete(customer))">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Customer> Customers = new()
    {
        new Customer
        {
            Id = Guid.NewGuid(),
            ContactName = "alkis",
            City = "athes"
        }
    };
    private int currentPage = 0;

    protected override async Task OnInitializedAsync()
    {
        var res = await customerManager.GetCustomers(currentPage);
        if(res != null)
        {
            Customers = res.ToList();
        }
    }

    private async Task NextPage()
    {
        currentPage++;
        var res = await customerManager.GetCustomers(currentPage);
        if (res != null)
        {
            Customers = res.ToList();
        }
    }

    private async Task PreviousPage()
    {
        if(currentPage > 0)
        {
            currentPage--;
        }
        var res = await customerManager.GetCustomers(currentPage);
        if (res != null)
        {
            Customers = res.ToList();
        }
    }

    private async Task Delete(Customer customer)
    {
        var res = await customerManager.DeleteCustomer(customer);
        if (res)
        {
            Customers.Remove(customer);
        }
    }

    private void Edit(Guid Id)
    {
        navManager.NavigateTo($"/updatecustomer/{Id}");
    }
}
